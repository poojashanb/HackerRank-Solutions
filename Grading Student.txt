
Description : 	HackerLand University has the following grading policy:
				Every student receives a  in the inclusive range from  to .
				Any  less than  is a failing grade.
				Sam is a professor at the university and likes to round each student's  according to these rules:

				If the difference between the  and the next multiple of  is less than , round  up to the next multiple of .
				If the value of  is less than , no rounding occurs as the result will still be a failing grade.
				
				For the below sample input :
				1. Student 1 received a 73, and the next multiple of 5 from 73 is 75. Since 75-73<3,the student's grade is rounded to 75.
				2. Student 2 received a 67, and the next multiple of 5 from 67 is 70. Since 70-67=3, the grade will not be modified and the student's final grade is 67.
				3. Student 3 received a 38, and the next multiple of 5 from 38 is 48. Since 40-38<3, the student's grade will be rounded to 40.
				4. Student 4 received a grade below 33, so the grade will not be modified and the student's final grade is 32.
				
Sample Input :	4
				73
				67
				38
				33
				Input format :
				The first line contains a single integer,n, the number of students.
				Each line i of the n subsequent lines contains a single integer,grades[i] .
				
Expected O/p :	75
				67
				40
				33		
Solution :

import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

class Result {

    /*
     * Complete the 'gradingStudents' function below.
     *
     * The function is expected to return an INTEGER_ARRAY.
     * The function accepts INTEGER_ARRAY grades as parameter.
     */

    public static List<Integer> gradingStudents(List<Integer> grades) {
    // Write your code here
        for(int g=0;g<grades.size();g++){
            int grade = grades.get(g);				// get one grade value from (example> [73,67,38,32]), 73
            if(grade>=38){							// 73>38 -> true
                int mod = grade%5;					// 73%5 = 3
                int num = (5-mod)+grade;			//num = (5-3)+73 = 75
                int modAgain = num-grade;			//modAgain = 75-73 = 2
                if(modAgain < 3){					// modAgain<3 -> true 
                    grades.set(g,num);				// replace grade value of 75 for 73
                }
            }
        }
        return grades;
    }
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int gradesCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> grades = new ArrayList<>();

        for (int i = 0; i < gradesCount; i++) {
            int gradesItem = Integer.parseInt(bufferedReader.readLine().trim());
            grades.add(gradesItem);
        }

        List<Integer> result = Result.gradingStudents(grades);

        for (int i = 0; i < result.size(); i++) {
            bufferedWriter.write(String.valueOf(result.get(i)));

            if (i != result.size() - 1) {
                bufferedWriter.write("\n");
            }
        }

        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
