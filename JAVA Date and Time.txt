Description :	The Calendar class is an abstract class that provides methods for converting between a specific instant in time and a set of calendar fields such as YEAR, MONTH, DAY_OF_MONTH, HOUR, and so on, 
				and for manipulating the calendar fields, such as getting the date of the next week.
				You are given a date. You just need to write the method,getDay(),which returns the day on that date. 
				To simplify your task, we have provided a portion of the code in the editor.
				For example, if you are given the date [August 14th 2017], the method should return [MONDAY] as the day on that date.
				
				The day on August 5th 2015 was WEDNESDAY.

Sample Input :	08 05 2015    //Input is given in MM DD YYYY format

Sample Output :	WEDNESDAY

Solution :	
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;
import java.time.LocalDate;
import java.time.DayOfWeek;

class Result {

    public static String findDay(int month, int day, int year) {		//Use LOcalDate class in Java 8
        LocalDate localDate = LocalDate.of(year, month,day);			//create LocalDate class object with given day,month and year
        DayOfWeek dayOfWeek = DayOfWeek.from(localDate);				//DayOfWeek class object is created
        return dayOfWeek.name();										// get the name of date using name() method
    }
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String[] firstMultipleInput = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");

        int month = Integer.parseInt(firstMultipleInput[0]);

        int day = Integer.parseInt(firstMultipleInput[1]);

        int year = Integer.parseInt(firstMultipleInput[2]);

        String res = Result.findDay(month, day, year);

        bufferedWriter.write(res);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
