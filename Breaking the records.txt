Description :	Maria plays college basketball and wants to go pro. Each season she maintains a record of her play. She tabulates the number of times she breaks her season record for most points and least points in a game. 
				Points scored in the first game establish her record for the season, and she begins counting from there.
				For example, assume her scores for the season are represented in the array scores=[12,24,10,24]. 
				Scores are in the same order as the games played. She would tabulate her results as follows:
											Count
				Game  Score  Minimum  Maximum   Min Max
				0      12     12       12       0   0
				1      24     12       24       0   1
				2      10     10       24       1   1
				3      24     10       24       1   1
				Given the scores for a season, find and print the number of times 
				Maria breaks her records for most and least points scored during the season.
				Complete the breakingRecords function in the editor below. It must return an integer array containing the numbers of times she broke her records. 
				Index 0 is for breaking most points records, and index 1 is for breaking least points records.
				breakingRecords has the following parameter(s):
					scores: an array of integers
					
Sample Input :	1)	9
					10 5 20 20 4 5 2 25 1
				2)	10
					3 4 21 36 10 28 35 5 24 42

Sample Output :	1)	2 4
				2)	4 0
For explanation of test case 1 and 2 above, check this link - https://www.hackerrank.com/challenges/breaking-best-and-worst-records/problem

Solution :	
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the breakingRecords function below.
    static int[] breakingRecords(int[] scores) {
        int min =scores[0];
        int max =scores[0];
        int count =0;
        int total=0;
        for(int i=0;i<scores.length;i++){
            if(scores[i]<min){
                count ++;
                min = scores[i];
            }else if(scores[i]>max){
                total ++;
                max=scores[i];
            }
        }
        int[] result = new int[2];
        result[0]=total;
        result[1]=count;

        return result;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] scores = new int[n];

        String[] scoresItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int scoresItem = Integer.parseInt(scoresItems[i]);
            scores[i] = scoresItem;
        }

        int[] result = breakingRecords(scores);

        for (int i = 0; i < result.length; i++) {
            bufferedWriter.write(String.valueOf(result[i]));

            if (i != result.length - 1) {
                bufferedWriter.write(" ");
            }
        }

        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
