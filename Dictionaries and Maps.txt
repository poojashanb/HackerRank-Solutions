Description : Given n names and phone numbers, assemble a phone book that maps friends' names to their respective phone numbers. 
			You will then be given an unknown number of names to query your phone book for. 
			For each NAME queried, print the associated entry from your phone book on a new line in the form name=phoneNumber; 
			if an entry for NAME is not found, print Not found instead.
			
			We add the following n=3 (Key,Value) pairs to our map so it looks like this:
			phoneBook = {(sam,99912222),(tom,11122222),(harry,12299933)}
			We then process each query and print key=value if the queried key is found in the map; otherwise, we print Not found.

			Query 0: sam
			Sam is one of the keys in our dictionary, so we print sam=99912222.

			Query 1: edward
			Edward is not one of the keys in our dictionary, so we print Not found.

			Query 2: harry
			Harry is one of the keys in our dictionary, so we print harry=12299933.

Sample Input :	3
				sam 99912222
				tom 11122222
				harry 12299933
				sam
				edward
				harry
				
				Input Format :
				The first line contains an integer,n , denoting the number of entries in the phone book.
				Each of the n subsequent lines describes an entry in the form of 2 space-separated values on a single line. 
				The first value is a friend's name, and the second value is an 8-digit phone number.
				After the n lines of phone book entries, there are an unknown number of lines of queries. 
				Each line (query) contains a [name] to look up, and you must continue reading lines until there is no more input.
				
Sample Output :	sam=99912222
				Not found
				harry=12299933
				
Solution :
PS * This is not an optimal solution as it doesn't satisfy the time limit constraint that Hackerrank applies on algortihm.
	 The solution exceeds time limit for bulk inputs.
	 
//Complete this code or write your own from scratch
import java.util.*;
import java.io.*;
import java.util.Map;
import java.util.HashMap;

class Solution{
    public static void main(String []argh){
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        
        int val=0;
        String key="";
        
        Map<String, Integer> phonebook = new HashMap<>();
        for(int i = 0; i < n; i++){
            String name = in.next();
            int phone = in.nextInt();
            // Write code here
            phonebook.put(name,phone);
        }
        while(in.hasNext()){
            String s = in.next();
            int flag=0;
            // Write code here
            for(Map.Entry<String,Integer> entry : phonebook.entrySet()){
                
                if(s.equals(entry.getKey())){
                    key = entry.getKey();
                    val = entry.getValue();
                    flag = 1;
                }
            }
            if(flag==1){
                System.out.printf("%s=%d",key,val).println();
            }else{
                System.out.println("Not found");
            }
        }
        in.close();
    }
}
