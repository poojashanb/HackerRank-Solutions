Description : 	Two cats and a mouse are at various positions on a line. You will be given their starting positions. Your task is to determine which cat will reach the mouse first, assuming the mouse does not move and the cats travel at equal speed. 
				If the cats arrive at the same time, the mouse will be allowed to move and it will escape while they fight.
				You are given q queries in the form of x, y, and z representing the respective positions for cats A and B, and C for mouse. 
				Complete the function catAndMouse() to return the appropriate answer to each query, which will be printed on a new line.
				If cat A catches the mouse first, print Cat A.
				If cat B catches the mouse first, print Cat B.
				If both cats reach the mouse at the same time, print Mouse C as the two cats fight and mouse escapes.
				
				Example
				x=2
				y=5
				z=4

				The cats are at positions 2 (Cat A) and 5 (Cat B), and the mouse is at position 4. 
				Cat B, at position 5 will arrive first since it is only 2 unit away while the other is 1 units away. Return 'Cat B'.
				
				Function Description :
				Complete the catAndMouse function in the editor below.
				catAndMouse has the following parameter(s):
					int x: Cat A's position
					int y: Cat B's position
					int z: Mouse C's position
					
				For ore explanation check - https://www.hackerrank.com/challenges/cats-and-a-mouse/problem

Sample Input :	2
				1 2 3
				1 3 2

Sample Output :	Cat B
				Mouse C

Solution :		
import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;
import java.lang.Math;

public class Solution {

    // Complete the catAndMouse function below.
    static String catAndMouse(int x, int y, int z) {
        int catA = Math.abs(z-x);					 //check which cat is near to the mouse, by finding difference of mouse's position and cat's position
        int catB = Math.abs(z-y);
        if(catA!=catB){
            if(catA>catB)
                return "Cat B";
            else
                return "Cat A";
        }
        else{
            return"Mouse C";
        }

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int q = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int qItr = 0; qItr < q; qItr++) {
            String[] xyz = scanner.nextLine().split(" ");

            int x = Integer.parseInt(xyz[0]);

            int y = Integer.parseInt(xyz[1]);

            int z = Integer.parseInt(xyz[2]);

            String result = catAndMouse(x, y, z);

            bufferedWriter.write(result);
            bufferedWriter.newLine();
        }

        bufferedWriter.close();

        scanner.close();
    }
}
